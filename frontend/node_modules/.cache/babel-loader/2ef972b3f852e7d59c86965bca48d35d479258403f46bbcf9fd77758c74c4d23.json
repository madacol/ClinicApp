{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rc_sh\\\\Desktop\\\\Unidad oftalmologica\\\\Clinica_rosmarian_castillo\\\\frontend\\\\src\\\\pages\\\\ReservarCita.js\",\n  _s = $RefreshSig$();\n// src/pages/ReservarCita.js\nimport React, { useState, useEffect } from 'react';\nimport { medicos, especialidades, centrosSalud } from '../MedicosData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservarCita = () => {\n  _s();\n  const [busquedaPorEspecialidad, setBusquedaPorEspecialidad] = useState(true);\n  const [especialidadSeleccionada, setEspecialidadSeleccionada] = useState('Oftalmología Adulto');\n  const [centroSaludSeleccionado, setCentroSaludSeleccionado] = useState('Consultorio Dra. Rosmarian Castillo');\n  const [direccionCentro, setDireccionCentro] = useState('');\n  const [medicoSeleccionado, setMedicoSeleccionado] = useState('Rosmarian Castillo');\n  const [medicosFiltrados, setMedicosFiltrados] = useState([]);\n\n  // Actualiza la lista de médicos filtrados según la especialidad seleccionada\n  useEffect(() => {\n    const filtrados = medicos.filter(m => m.especialidad === especialidadSeleccionada);\n    setMedicosFiltrados(filtrados);\n  }, [especialidadSeleccionada]);\n\n  // Actualiza la dirección del centro seleccionado\n  useEffect(() => {\n    const centro = centrosSalud.find(c => c === centroSaludSeleccionado);\n    // Para este ejemplo, usamos una dirección fija desde MedicosData o la lógica que tengas\n    setDireccionCentro(centro ? 'Dirección del ' + centro : '');\n  }, [centroSaludSeleccionado]);\n\n  // Función para cambiar entre búsqueda por especialidad o por médico\n  const toggleBusqueda = () => {\n    setBusquedaPorEspecialidad(!busquedaPorEspecialidad);\n  };\n\n  // Función para simular la búsqueda de cita (aquí llamarías tu API en un caso real)\n  const handleBuscarCita = () => {\n    console.log('Buscando cita con:', {\n      busquedaPorEspecialidad,\n      especialidad: especialidadSeleccionada,\n      medico: medicoSeleccionado,\n      centro: centroSaludSeleccionado,\n      direccion: direccionCentro\n    });\n    // Aquí podrías hacer una llamada a la API con axios\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reservar Cita\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleBusqueda,\n      children: busquedaPorEspecialidad ? 'Cambiar a búsqueda por Médico' : 'Cambiar a búsqueda por Especialidad'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), busquedaPorEspecialidad ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Especialidad:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: especialidadSeleccionada,\n        onChange: e => setEspecialidadSeleccionada(e.target.value),\n        children: especialidades.map((esp, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: esp,\n          children: esp\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"M\\xE9dico:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: medicoSeleccionado,\n        onChange: e => setMedicoSeleccionado(e.target.value),\n        children: medicosFiltrados.map((med, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: med.nombre,\n          children: med.nombre\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Centro de Salud:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: centroSaludSeleccionado,\n        onChange: e => setCentroSaludSeleccionado(e.target.value),\n        children: centrosSalud.map((centro, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: centro,\n          children: centro\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Direcci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: direccionCentro,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBuscarCita,\n      children: \"Buscar cita\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservarCita, \"0So9tJBKHHMksWHqGLUwM3boelQ=\");\n_c = ReservarCita;\nexport default ReservarCita;\nvar _c;\n$RefreshReg$(_c, \"ReservarCita\");","map":{"version":3,"names":["React","useState","useEffect","medicos","especialidades","centrosSalud","jsxDEV","_jsxDEV","ReservarCita","_s","busquedaPorEspecialidad","setBusquedaPorEspecialidad","especialidadSeleccionada","setEspecialidadSeleccionada","centroSaludSeleccionado","setCentroSaludSeleccionado","direccionCentro","setDireccionCentro","medicoSeleccionado","setMedicoSeleccionado","medicosFiltrados","setMedicosFiltrados","filtrados","filter","m","especialidad","centro","find","c","toggleBusqueda","handleBuscarCita","console","log","medico","direccion","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","map","esp","idx","med","nombre","type","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/rc_sh/Desktop/Unidad oftalmologica/Clinica_rosmarian_castillo/frontend/src/pages/ReservarCita.js"],"sourcesContent":["// src/pages/ReservarCita.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { medicos, especialidades, centrosSalud } from '../MedicosData';\r\n\r\nconst ReservarCita = () => {\r\n  const [busquedaPorEspecialidad, setBusquedaPorEspecialidad] = useState(true);\r\n  const [especialidadSeleccionada, setEspecialidadSeleccionada] = useState('Oftalmología Adulto');\r\n  const [centroSaludSeleccionado, setCentroSaludSeleccionado] = useState('Consultorio Dra. Rosmarian Castillo');\r\n  const [direccionCentro, setDireccionCentro] = useState('');\r\n  const [medicoSeleccionado, setMedicoSeleccionado] = useState('Rosmarian Castillo');\r\n  const [medicosFiltrados, setMedicosFiltrados] = useState([]);\r\n\r\n  // Actualiza la lista de médicos filtrados según la especialidad seleccionada\r\n  useEffect(() => {\r\n    const filtrados = medicos.filter(m => m.especialidad === especialidadSeleccionada);\r\n    setMedicosFiltrados(filtrados);\r\n  }, [especialidadSeleccionada]);\r\n\r\n  // Actualiza la dirección del centro seleccionado\r\n  useEffect(() => {\r\n    const centro = centrosSalud.find(c => c === centroSaludSeleccionado);\r\n    // Para este ejemplo, usamos una dirección fija desde MedicosData o la lógica que tengas\r\n    setDireccionCentro(centro ? 'Dirección del ' + centro : '');\r\n  }, [centroSaludSeleccionado]);\r\n\r\n  // Función para cambiar entre búsqueda por especialidad o por médico\r\n  const toggleBusqueda = () => {\r\n    setBusquedaPorEspecialidad(!busquedaPorEspecialidad);\r\n  };\r\n\r\n  // Función para simular la búsqueda de cita (aquí llamarías tu API en un caso real)\r\n  const handleBuscarCita = () => {\r\n    console.log('Buscando cita con:', {\r\n      busquedaPorEspecialidad,\r\n      especialidad: especialidadSeleccionada,\r\n      medico: medicoSeleccionado,\r\n      centro: centroSaludSeleccionado,\r\n      direccion: direccionCentro,\r\n    });\r\n    // Aquí podrías hacer una llamada a la API con axios\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Reservar Cita</h1>\r\n      <button onClick={toggleBusqueda}>\r\n        {busquedaPorEspecialidad ? 'Cambiar a búsqueda por Médico' : 'Cambiar a búsqueda por Especialidad'}\r\n      </button>\r\n      \r\n      {busquedaPorEspecialidad ? (\r\n        <div>\r\n          <label>Especialidad:</label>\r\n          <select value={especialidadSeleccionada} onChange={(e) => setEspecialidadSeleccionada(e.target.value)}>\r\n            {especialidades.map((esp, idx) => (\r\n              <option key={idx} value={esp}>{esp}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <label>Médico:</label>\r\n          <select value={medicoSeleccionado} onChange={(e) => setMedicoSeleccionado(e.target.value)}>\r\n            {medicosFiltrados.map((med, idx) => (\r\n              <option key={idx} value={med.nombre}>{med.nombre}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <label>Centro de Salud:</label>\r\n        <select value={centroSaludSeleccionado} onChange={(e) => setCentroSaludSeleccionado(e.target.value)}>\r\n          {centrosSalud.map((centro, idx) => (\r\n            <option key={idx} value={centro}>{centro}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label>Dirección:</label>\r\n        <input type=\"text\" value={direccionCentro} readOnly />\r\n      </div>\r\n\r\n      <button onClick={handleBuscarCita}>Buscar cita</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservarCita;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}