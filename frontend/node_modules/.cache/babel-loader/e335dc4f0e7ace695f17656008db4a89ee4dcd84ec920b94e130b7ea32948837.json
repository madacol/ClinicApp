{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rc_sh\\\\Desktop\\\\Unidad oftalmologica\\\\Clinica_rosmarian_castillo\\\\frontend\\\\src\\\\pages\\\\ReservarCita.js\",\n  _s = $RefreshSig$();\n// src/pages/ReservarCita.js\nimport React, { useState } from 'react';\n// Importa los datos estáticos desde ListaMedicos.js\nimport { medicosData as medicos, especialidadesData as especialidades, centrosSaludData as centrosSalud } from '../ListaMedicos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservarCita = () => {\n  _s();\n  const [isEspecialidad, setIsEspecialidad] = useState(true);\n  const [especialidadSeleccionada, setEspecialidadSeleccionada] = useState('Oftalmología Adulto');\n  const [centroSalud, setCentroSalud] = useState('Consultorio Dra. Rosmarian Castillo');\n  const [direccionCentro, setDireccionCentro] = useState('Centro empresarial Qvadra, F5W8+757, Caracas 1071, Miranda, Venezuela');\n  const [medicoSeleccionado, setMedicoSeleccionado] = useState('Rosmarian Castillo');\n  const [medicosDisponibles, setMedicosDisponibles] = useState(medicos);\n  const toggleBusqueda = () => {\n    setIsEspecialidad(!isEspecialidad);\n    if (!isEspecialidad) {\n      setEspecialidadSeleccionada('');\n      setCentroSalud('Consultorio Dra. Rosmarian Castillo');\n      setDireccionCentro('Centro empresarial Qvadra, F5W8+757, Caracas 1071, Miranda, Venezuela');\n    }\n  };\n  const obtenerCentrosPorMedico = () => {\n    const medicoData = medicos.find(m => m.nombre === medicoSeleccionado);\n    return medicoData ? medicoData.centros : [];\n  };\n  const handleBuscarCita = () => {\n    console.log('Buscando cita...', {\n      especialidad: especialidadSeleccionada,\n      medico: medicoSeleccionado,\n      centroSalud,\n      direccionCentro\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reservar Cita\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Click para cambiar b\\xFAsqueda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleBusqueda,\n      children: isEspecialidad ? 'Buscar por Médico' : 'Buscar por Especialidad'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), isEspecialidad ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Especialidad:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: especialidadSeleccionada,\n        onChange: e => setEspecialidadSeleccionada(e.target.value),\n        children: especialidades.map((esp, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: esp,\n          children: esp\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"M\\xE9dico:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: medicoSeleccionado,\n        onChange: e => {\n          setMedicoSeleccionado(e.target.value);\n          const medicoData = medicos.find(m => m.nombre === e.target.value);\n          setCentroSalud(medicoData ? medicoData.centros[0] : '');\n          setDireccionCentro(medicoData ? medicoData.direccion : '');\n        },\n        children: medicosDisponibles.map((m, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: m.nombre,\n          children: m.nombre\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Centro de Salud:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: centroSalud,\n        onChange: e => {\n          setCentroSalud(e.target.value);\n          const centroSeleccionado = medicos.find(m => m.centros.includes(e.target.value));\n          setDireccionCentro(centroSeleccionado ? centroSeleccionado.direccion : '');\n        },\n        children: obtenerCentrosPorMedico().map((centro, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: centro,\n          children: centro\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Direcci\\xF3n del Centro de Salud:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: direccionCentro,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBuscarCita,\n      children: \"Buscar cita\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservarCita, \"xGii/3mtSHXulzder3MGQ6pYVw4=\");\n_c = ReservarCita;\nexport default ReservarCita;\nvar _c;\n$RefreshReg$(_c, \"ReservarCita\");","map":{"version":3,"names":["React","useState","medicosData","medicos","especialidadesData","especialidades","centrosSaludData","centrosSalud","jsxDEV","_jsxDEV","ReservarCita","_s","isEspecialidad","setIsEspecialidad","especialidadSeleccionada","setEspecialidadSeleccionada","centroSalud","setCentroSalud","direccionCentro","setDireccionCentro","medicoSeleccionado","setMedicoSeleccionado","medicosDisponibles","setMedicosDisponibles","toggleBusqueda","obtenerCentrosPorMedico","medicoData","find","m","nombre","centros","handleBuscarCita","console","log","especialidad","medico","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","map","esp","idx","direccion","centroSeleccionado","includes","centro","type","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/rc_sh/Desktop/Unidad oftalmologica/Clinica_rosmarian_castillo/frontend/src/pages/ReservarCita.js"],"sourcesContent":["// src/pages/ReservarCita.js\r\nimport React, { useState } from 'react';\r\n// Importa los datos estáticos desde ListaMedicos.js\r\nimport { medicosData as medicos, especialidadesData as especialidades, centrosSaludData as centrosSalud } from '../ListaMedicos';\r\n\r\nconst ReservarCita = () => {\r\n  const [isEspecialidad, setIsEspecialidad] = useState(true);\r\n  const [especialidadSeleccionada, setEspecialidadSeleccionada] = useState('Oftalmología Adulto');\r\n  const [centroSalud, setCentroSalud] = useState('Consultorio Dra. Rosmarian Castillo');\r\n  const [direccionCentro, setDireccionCentro] = useState('Centro empresarial Qvadra, F5W8+757, Caracas 1071, Miranda, Venezuela');\r\n  const [medicoSeleccionado, setMedicoSeleccionado] = useState('Rosmarian Castillo');\r\n  const [medicosDisponibles, setMedicosDisponibles] = useState(medicos);\r\n\r\n  const toggleBusqueda = () => {\r\n    setIsEspecialidad(!isEspecialidad);\r\n    if (!isEspecialidad) {\r\n      setEspecialidadSeleccionada('');\r\n      setCentroSalud('Consultorio Dra. Rosmarian Castillo');\r\n      setDireccionCentro('Centro empresarial Qvadra, F5W8+757, Caracas 1071, Miranda, Venezuela');\r\n    }\r\n  };\r\n\r\n  const obtenerCentrosPorMedico = () => {\r\n    const medicoData = medicos.find((m) => m.nombre === medicoSeleccionado);\r\n    return medicoData ? medicoData.centros : [];\r\n  };\r\n\r\n  const handleBuscarCita = () => {\r\n    console.log('Buscando cita...', {\r\n      especialidad: especialidadSeleccionada,\r\n      medico: medicoSeleccionado,\r\n      centroSalud,\r\n      direccionCentro,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Reservar Cita</h1>\r\n      <h4>Click para cambiar búsqueda</h4>\r\n      <button onClick={toggleBusqueda}>\r\n        {isEspecialidad ? 'Buscar por Médico' : 'Buscar por Especialidad'}\r\n      </button>\r\n\r\n      {isEspecialidad ? (\r\n        <div>\r\n          <label>Especialidad:</label>\r\n          <select\r\n            value={especialidadSeleccionada}\r\n            onChange={(e) => setEspecialidadSeleccionada(e.target.value)}\r\n          >\r\n            {especialidades.map((esp, idx) => (\r\n              <option key={idx} value={esp}>\r\n                {esp}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <label>Médico:</label>\r\n          <select\r\n            value={medicoSeleccionado}\r\n            onChange={(e) => {\r\n              setMedicoSeleccionado(e.target.value);\r\n              const medicoData = medicos.find((m) => m.nombre === e.target.value);\r\n              setCentroSalud(medicoData ? medicoData.centros[0] : '');\r\n              setDireccionCentro(medicoData ? medicoData.direccion : '');\r\n            }}\r\n          >\r\n            {medicosDisponibles.map((m, idx) => (\r\n              <option key={idx} value={m.nombre}>\r\n                {m.nombre}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <label>Centro de Salud:</label>\r\n          <select\r\n            value={centroSalud}\r\n            onChange={(e) => {\r\n              setCentroSalud(e.target.value);\r\n              const centroSeleccionado = medicos.find((m) => m.centros.includes(e.target.value));\r\n              setDireccionCentro(centroSeleccionado ? centroSeleccionado.direccion : '');\r\n            }}\r\n          >\r\n            {obtenerCentrosPorMedico().map((centro, idx) => (\r\n              <option key={idx} value={centro}>\r\n                {centro}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <label>Dirección del Centro de Salud:</label>\r\n        <input type=\"text\" value={direccionCentro} readOnly />\r\n      </div>\r\n\r\n      <button onClick={handleBuscarCita}>Buscar cita</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservarCita;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}